apply plugin: 'com.android.model.application' //这里变化了
model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.0"
        defaultConfig.with {
            applicationId = "com.chensd.ndkdeveloputil"
            minSdkVersion.apiLevel = 14
            targetSdkVersion.apiLevel = 23
        }
        tasks.withType(JavaCompile){
            //指定编译JDK版本
            sourceCompatibility=JavaVersion.VERSION_1_7
            targetCompatibility=JavaVersion.VERSION_1_7
        }
    }
/*    * native build settings    */
    android.ndk {
        moduleName = "jnitest" //必须与JniTest类中的一致
//        cppFlags.add("-fno-rtti")
//        cppFlags.add("-fno-exceptions")
//        ldLibs.addAll(["android", "log"])
//        stl      = "system"
    }
    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
        }
    }
    android.productFlavors {
// for detailed abiFilter descriptions, refer to "Supported ABIs" @
// https://developer.android.com/ndk/guides/abis.html#sa
        create("arm") {
            ndk.abiFilters.add("armeabi")
        }
        create("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
        }
        create("arm8") {
            ndk.abiFilters.add("arm64-v8a")
        }
        create("x86") {
            ndk.abiFilters.add("x86")
        }
        create("x86-64") {
            ndk.abiFilters.add("x86_64")
        }
        create("mips") {
            ndk.abiFilters.add("mips")
        }
        create("mips-64") {
            ndk.abiFilters.add("mips64")
        }
        // To include all cpu architectures, leaves abiFilters empty
        create("all")
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
}
